# Задача 1: Реверс строки

# Этап 1: Основы работы со строками
user_input = input("Введите строку: ")  # Запрашиваем у пользователя ввод строки
reversed_string = user_input[::-1]  # Используем срезы для реверса строки
print("Реверсированная строка:", reversed_string)  # Выводим результат


# Этап 2: Использование цикла
user_input = input("Введите строку: ")  # Запрашиваем у пользователя ввод строки
reversed_string = ""  # Создаем пустую строку для хранения реверса
for char in user_input:  # Перебираем символы введенной строки
    reversed_string = char + reversed_string  # Добавляем символ в начало реверсированной строки
print("Реверсированная строка:", reversed_string)  # Выводим результат


# Задача 2: Поиск самого длинного слова

# Этап 3: Обработка строк
sentence = input("Введите предложение: ")  # Запрашиваем у пользователя ввод предложения
words = sentence.split()  # Разбиваем предложение на слова
longest_word = max(words, key=len)  # Находим самое длинное слово
print("Самое длинное слово:", longest_word)  # Выводим результат


# Этап 4: Разделение строки на слова
sentence = input("Введите предложение: ")  # Запрашиваем у пользователя ввод предложения
words = sentence.split()  # Разбиваем предложение на слова
longest_word = max(words, key=len)  # Находим самое длинное слово
print("Самое длинное слово:", longest_word)  # Выводим результат


# Задача 3: Подсчет частоты слов

# Этап 5: Использование словарей
sentence = input("Введите предложение: ")  # Запрашиваем у пользователя ввод предложения
words = sentence.split()  # Разбиваем предложение на слова
word_frequency = {}  # Создаем пустой словарь для подсчета частоты слов

for word in words:  # Перебираем слова
    if word in word_frequency:  # Если слово уже есть в словаре
        word_frequency[word] += 1  # Увеличиваем счетчик
    else:  # Если слова нет в словаре
        word_frequency[word] = 1  # Добавляем его с счетчиком 1

print("Частота слов:", word_frequency)  # Выводим результат





# # Этап 4: Использование алгоритма сортировки
# def bubble_sort(arr):
#     n = len(arr)
#     for i in range(n):
#         for j in range(0, n-i-1):
#             if arr[j] > arr[j+1]:
#                 arr[j], arr[j+1] = arr[j+1], arr[j]
#     return arr

# # Исходный список
# original_list = [5, 12, 3, 8, 7, 10, 1]
# print(f"Исходный список: {original_list}")

# # Сортировка
# sorted_list = bubble_sort(original_list.copy())

# # Этап 5: Рефакторинг с использованием структур данных
# print(f"Отсортированный список: {sorted_list}")
